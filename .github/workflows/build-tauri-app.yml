name: Build
on: push

jobs:
  build:
    strategy:
      fail-fast: false

    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Node.js
      uses: actions/setup-node@v1
      with:
        node-version: 12
    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"
    - name: Use yarn cache
      uses: actions/cache@v1
      id: yarn-cache
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    - name: Install app dependencies
      run: yarn --prefer-offline
    - name: Run format checker
      run: yarn formatted
    - name: Run linter
      run: yarn lint
    - name: Run svelte checker
      run: yarn svelte-check
    - name: Run frontend build
      run: yarn build

  bundle-amd64:
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.platform }}
    steps:
    - uses: actions/checkout@v2
    - name: Set up Node.js
      uses: actions/setup-node@v1
      with:
        node-version: 12
    - name: Install Rust stable
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
    - name: Install webkit2gtk (Ubuntu only)
      if: matrix.platform == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y webkit2gtk-4.0
    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"
    - name: Use yarn cache
      uses: actions/cache@v1
      id: yarn-cache
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-
    - name: Install app dependencies
      run: yarn --prefer-offline
    - name: Use rust cache
      uses: Swatinem/rust-cache@v1
      working-directory: src-tauri
    - name: Run the release build
      run: |
        echo "Print tauri info"
        cargo tauri info
        echo "Build"
        cargo tauri build
    - name: Upload the build artifacts
      uses: actions/upload-artifact@v2
      with:
        name: latreutes-bundle-amd64-${{ matrix.platform }}
        path: |
          src-tauri/target/release/bundle/*
          !src-tauri/target/release/bundle/appimage/latreutes.AppDir/
          src-tauri/target/release/latreutes*
